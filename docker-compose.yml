version: "3.9"

services:
  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: market-master-mlflow
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlflow/artifacts
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:5000')"]
      interval: 10s
      timeout: 3s
      retries: 10

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: market-master-api
    depends_on:
      mlflow:
        condition: service_healthy
    environment:
      # Point API to MLflow server so training/prediction logs appear in UI
      MLFLOW_TRACKING_URI: "http://mlflow:5000"
      MODEL_URI: "models:/market-master-component-classifier@Production"
      PYTHONUNBUFFERED: "1"
    ports:
      - "8000:8000"
    volumes:
      # Optional: if your API reads/writes local artifacts (e.g., CSVs)
      - ./data:/app/data
      - ./artifacts:/app/artifacts
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 10s
      timeout: 3s
      retries: 15

  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: market-master-dashboard
    depends_on:
      api:
        condition: service_healthy
    environment:
      # If dashboard calls API
      API_BASE_URL: "http://api:8000"
      MLFLOW_TRACKING_URI: "http://mlflow:5000"
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data:ro
      - ./artifacts:/app/artifacts:ro
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8501')"]
      interval: 10s
      timeout: 3s
      retries: 10


